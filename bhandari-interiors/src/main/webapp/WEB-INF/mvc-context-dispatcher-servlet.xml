<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">

	<mvc:annotation-driven />
	<context:annotation-config />
	
	<mvc:resources mapping="/resources/**" location="/resources/" />
	
	<context:component-scan base-package="com.interiors.app.controller" />
	 <bean name="testManager" class="com.interiors.app.dap.mapper.TestManagerImpl" />
	
		<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"></bean>
	
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<!-- <property name="prefix" value="/wp/origin/jsp/" /> -->
		<property name="suffix" value=".jsp" />
	</bean>


	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>

		<property name="url">
			<value>jdbc:mysql://localhost/test</value>
		</property>

		<property name="username">
			<value>admin</value>
		</property>

		<property name="password">
			<value></value>
		</property>

	</bean>

	<bean id="userDAOImpl" class="com.interiors.app.security.dao.UserDAOImpl" parent="baseDao">
			<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="userDetailsService" class="com.interiors.app.security.service.CustomUserDetailsService">
		<property name="userDAO" ref="userDAOImpl" />
	</bean>
	
	<bean id="baseDao" class = "com.interiors.app.security.dao.BaseDao">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>
	
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> -->
	
	<!-- <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">

		<property name="driverClassName">
			<value>com.mysql.jdbc.Driver</value>
		</property>

		<property name="url">
			<value>jdbc:mysql://localhost/test</value>
		</property>

		<property name="username">
			<value>admin</value>
		</property>

		<property name="password">
			<value></value>
		</property>

	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean -->

<!-- 	<bean id="baseDao" class="com.study.dao.BaseDao"
		depends-on="dataSource" abstract="true">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
	</bean> -->
	
	<!-- Abstract signifies that the bean can be initialized without the class.
	abstract bean in Spring doesn't even have to be mapped to any class
	 -->
	 
 
	<!-- <bean id="baseDao" abstract="true">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
	</bean> -->
	
<!-- 	<bean name="customUserDetailsService" class="com.interiors.app.security.service.CustomUserDetailsService" >
		<property name="userDao" ref = "userDao"></property>
	</bean> -->
	
	<!-- <bean id="userDaoImpl" class="com.study.dao.UserDao">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
	</bean> -->

	<!-- <bean id="userDao" class="com.interiors.app.security.dao.UserDao">
		<property name="dataSource" ref="dataSource" />
		<property name="message" value="i'm property message" />
	</bean> -->
	
</beans>
